[tool.poetry]
name = "asknews"
version = "0.6.7"
description = "Python SDK for AskNews"
authors = ["Emergent Methods <contact@emergentmethods.ai>"]
packages = [{ include = "asknews_sdk" }]
license = "MIT"
readme = "README.md"
repository = "https://github.com/emergentmethods/asknews-python-sdk"

[tool.poetry.dependencies]
python = ">=3.8.1,<4.0"
orjson = "^3.9.10"
pydantic = "^2.5.3"
httpx = "^0.24.1"
authlib = "^1.3.0"
asgiref = "^3.7.2"

[tool.poetry.group.dev.dependencies]
mypy = "^1.2.0"
ruff = "^0.4.3"
pytest = ">=7.3.1,<9.0.0"
pytest-asyncio = "^0.21.0"
coverage = "^7.2.7"
pre-commit = "^3.3.2"
gitlint = "^0.19.1"
commitizen = "^3.25.0"

[tool.ruff.lint]
select = ["E", "W", "F", "I", "C", "B"]

[tool.ruff.lint.mccabe]
max-complexity = 15

[tool.mypy]
plugins = "pydantic.mypy"
ignore_missing_imports = true

[tool.pytest.ini_options]
addopts = "-s -p no:warnings"
testpaths = ["tests"]
asyncio_mode = "auto"
log_cli = "True"
log_auto_indent = "False"

[tool.coverage.run]
source = ["asknews_sdk"]

[tool.coverage.report]
ignore_errors = "true"

[tool.coverage.xml]
output = "coverage.xml"

[tool.commitizen]
name = "cz_conventional_commits"
tag_format = "$version"
version_scheme = "semver"
version_provider = "poetry"
update_changelog_on_bump = true
bump_message = "chore(release): Release $new_version"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
