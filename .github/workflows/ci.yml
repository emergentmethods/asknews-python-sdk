name: CI Checks
on:
  pull_request:
  push:
jobs:
  ci:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - ubuntu-latest
        python-version:
          - 3.8
          - 3.9
          - "3.10"
          - 3.11
          - 3.12
    steps:
      - name: Checkout
        uses: actions/checkout@v5
      - name: Setup python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Cache pip
        uses: actions/cache@v4
        env:
          SEGMENT_DOWNLOAD_TIMEOUT_MIN: "15"
        with:
          path: |
            ~/.cache/pip
          key: pip-${{ runner.os }}-${{ runner.arch }}-py-${{ matrix.python-version }}
      - name: Install the latest version of uv
        uses: astral-sh/setup-uv@v6
      - name: Cache uv
        uses: actions/cache@v4
        env:
          SEGMENT_DOWNLOAD_TIMEOUT_MIN: "15"
        with:
          path: |
            ~/.cache/pip
            ~/.cache/uv
          key: uv-${{ runner.os }}-${{ runner.arch }}-py-${{ matrix.python-version }}-uv-${{ hashFiles('uv.lock') }}
      - name: Install dependencies
        run: |
          uv sync --refresh
          uv cache prune --ci
          echo "$PWD/.venv/bin" >> $GITHUB_PATH
      - name: Install task
        uses: arduino/setup-task@v2
        with:
          version: 3.x
          repo-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Run lint task
        run: task lint
      - name: Run test task
        run: task test