name: Release
on:
  push:
    tags:
      - '*'
jobs:
  release:
    name: Release
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - ubuntu-latest
        python-version:
          - 3.12
    environment:
      name: pypi
      url: https://pypi.org/p/asknews/
    permissions:
      id-token: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Cache pip
        uses: actions/cache@v4
        env:
          SEGMENT_DOWNLOAD_TIMEOUT_MIN: "15"
        with:
          path: |
            ~/.cache/pip
          key: pip-${{ runner.os }}-${{ runner.arch }}-py-${{ matrix.python-version }}
      - name: Install poetry
        run: pipx install poetry --python python${{ matrix.python-version }}
      - name: Cache poetry
        uses: actions/cache@v4
        env:
          SEGMENT_DOWNLOAD_TIMEOUT_MIN: "15"
        with:
          path: |
            ~/.cache/pypoetry/virtualenvs
            ~/.cache/pypoetry/cache
            ~/.cache/pypoetry/artifacts
          key: poetry-${{ runner.os }}-${{ runner.arch }}-py-${{ matrix.python-version }}-poetry-${{ hashFiles('poetry.lock') }}
      - name: Install dependencies
        run: poetry install
      - name: Install task
        uses: arduino/setup-task@v2
        with:
          version: 3.x
          repo-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Build package
        run: task build
      - name: Publish package distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
